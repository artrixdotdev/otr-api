CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE beatmaps (
        id integer GENERATED ALWAYS AS IDENTITY,
        osu_id bigint NOT NULL,
        has_data boolean NOT NULL DEFAULT TRUE,
        mapper_id bigint NOT NULL,
        mapper_name character varying(32) NOT NULL,
        artist character varying(512) NOT NULL,
        title character varying(512) NOT NULL,
        diff_name character varying(255) NOT NULL,
        ranked_status integer NOT NULL,
        sr double precision NOT NULL,
        bpm double precision NOT NULL,
        cs double precision NOT NULL,
        ar double precision NOT NULL,
        hp double precision NOT NULL,
        od double precision NOT NULL,
        length double precision NOT NULL,
        ruleset integer NOT NULL,
        circle_count integer NOT NULL,
        slider_count integer NOT NULL,
        spinner_count integer NOT NULL,
        max_combo integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_beatmaps" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE players (
        id integer GENERATED ALWAYS AS IDENTITY,
        osu_id bigint NOT NULL,
        username character varying(32) NOT NULL,
        country character varying(4) NOT NULL,
        default_ruleset integer NOT NULL,
        osu_last_fetch timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        osu_track_last_fetch timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        ruleset_data jsonb,
        CONSTRAINT "PK_players" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE player_ratings (
        id integer GENERATED ALWAYS AS IDENTITY,
        ruleset integer NOT NULL,
        rating double precision NOT NULL,
        volatility double precision NOT NULL,
        percentile double precision NOT NULL,
        global_rank integer NOT NULL,
        country_rank integer NOT NULL,
        player_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_player_ratings" PRIMARY KEY (id),
        CONSTRAINT "FK_player_ratings_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE users (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        last_login timestamp with time zone,
        scopes text[] NOT NULL,
        player_id integer,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        rate_limit_overrides jsonb NOT NULL,
        CONSTRAINT "PK_users" PRIMARY KEY (id),
        CONSTRAINT "FK_users_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE oauth_clients (
        id integer GENERATED ALWAYS AS IDENTITY,
        secret character varying(128) NOT NULL,
        scopes text[] NOT NULL,
        user_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        rate_limit_overrides jsonb NOT NULL,
        CONSTRAINT "PK_oauth_clients" PRIMARY KEY (id),
        CONSTRAINT "FK_oauth_clients_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE tournaments (
        id integer GENERATED ALWAYS AS IDENTITY,
        name character varying(512) NOT NULL,
        abbreviation character varying(32) NOT NULL,
        forum_url character varying(255) NOT NULL,
        rank_range_lower_bound integer NOT NULL,
        ruleset integer NOT NULL,
        lobby_size integer NOT NULL,
        verification_status integer NOT NULL,
        rejection_reason integer NOT NULL,
        processing_status integer NOT NULL,
        last_processing_date timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        submitted_by_user_id integer,
        verified_by_user_id integer,
        "StartTime" timestamp with time zone NOT NULL,
        "EndTime" timestamp with time zone NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        CONSTRAINT "PK_tournaments" PRIMARY KEY (id),
        CONSTRAINT "FK_tournaments_users_submitted_by_user_id" FOREIGN KEY (submitted_by_user_id) REFERENCES users (id) ON DELETE SET NULL,
        CONSTRAINT "FK_tournaments_users_verified_by_user_id" FOREIGN KEY (verified_by_user_id) REFERENCES users (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE user_settings (
        id integer GENERATED ALWAYS AS IDENTITY,
        default_ruleset integer NOT NULL DEFAULT 0,
        default_ruleset_controlled boolean NOT NULL,
        user_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        CONSTRAINT "PK_user_settings" PRIMARY KEY (id),
        CONSTRAINT "FK_user_settings_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE matches (
        id integer GENERATED ALWAYS AS IDENTITY,
        osu_id bigint NOT NULL,
        name character varying(512) NOT NULL,
        start_time timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        end_time timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        verification_status integer NOT NULL,
        rejection_reason integer NOT NULL,
        processing_status integer NOT NULL,
        last_processing_date timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        tournament_id integer NOT NULL,
        submitted_by_user_id integer,
        verified_by_user_id integer,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        CONSTRAINT "PK_matches" PRIMARY KEY (id),
        CONSTRAINT "FK_matches_tournaments_tournament_id" FOREIGN KEY (tournament_id) REFERENCES tournaments (id) ON DELETE CASCADE,
        CONSTRAINT "FK_matches_users_submitted_by_user_id" FOREIGN KEY (submitted_by_user_id) REFERENCES users (id) ON DELETE SET NULL,
        CONSTRAINT "FK_matches_users_verified_by_user_id" FOREIGN KEY (verified_by_user_id) REFERENCES users (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE player_tournament_stats (
        id integer GENERATED ALWAYS AS IDENTITY,
        average_rating_delta double precision NOT NULL,
        average_match_cost double precision NOT NULL,
        average_score integer NOT NULL,
        average_placement double precision NOT NULL,
        average_accuracy double precision NOT NULL,
        matches_played integer NOT NULL,
        matches_won integer NOT NULL,
        matches_lost integer NOT NULL,
        games_played integer NOT NULL,
        games_won integer NOT NULL,
        games_lost integer NOT NULL,
        teammate_ids integer[] NOT NULL,
        player_id integer NOT NULL,
        tournament_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_player_tournament_stats" PRIMARY KEY (id),
        CONSTRAINT "FK_player_tournament_stats_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE,
        CONSTRAINT "FK_player_tournament_stats_tournaments_tournament_id" FOREIGN KEY (tournament_id) REFERENCES tournaments (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE tournament_audits (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        ref_id_lock integer NOT NULL,
        ref_id integer,
        action_user_id integer,
        action_type integer NOT NULL,
        changes jsonb NOT NULL,
        CONSTRAINT "PK_tournament_audits" PRIMARY KEY (id),
        CONSTRAINT "FK_tournament_audits_tournaments_ref_id" FOREIGN KEY (ref_id) REFERENCES tournaments (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE games (
        id integer GENERATED ALWAYS AS IDENTITY,
        osu_id bigint NOT NULL,
        ruleset integer NOT NULL,
        scoring_type integer NOT NULL,
        team_type integer NOT NULL,
        mods integer NOT NULL,
        post_mod_sr double precision NOT NULL,
        start_time timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        end_time timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        verification_status integer NOT NULL,
        rejection_reason integer NOT NULL,
        processing_status integer NOT NULL,
        last_processing_date timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        match_id integer NOT NULL,
        beatmap_id integer,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        CONSTRAINT "PK_games" PRIMARY KEY (id),
        CONSTRAINT "FK_games_beatmaps_beatmap_id" FOREIGN KEY (beatmap_id) REFERENCES beatmaps (id) ON DELETE SET NULL,
        CONSTRAINT "FK_games_matches_match_id" FOREIGN KEY (match_id) REFERENCES matches (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE match_audits (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        ref_id_lock integer NOT NULL,
        ref_id integer,
        action_user_id integer,
        action_type integer NOT NULL,
        changes jsonb NOT NULL,
        CONSTRAINT "PK_match_audits" PRIMARY KEY (id),
        CONSTRAINT "FK_match_audits_matches_ref_id" FOREIGN KEY (ref_id) REFERENCES matches (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE match_win_records (
        id integer GENERATED ALWAYS AS IDENTITY,
        winner_roster integer[] NOT NULL,
        loser_roster integer[] NOT NULL,
        winner_team integer NOT NULL,
        loser_team integer NOT NULL,
        winner_score integer NOT NULL,
        loser_score integer NOT NULL,
        match_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_match_win_records" PRIMARY KEY (id),
        CONSTRAINT "FK_match_win_records_matches_match_id" FOREIGN KEY (match_id) REFERENCES matches (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE player_match_stats (
        id integer GENERATED ALWAYS AS IDENTITY,
        match_cost double precision NOT NULL,
        average_score double precision NOT NULL,
        average_placement double precision NOT NULL,
        average_misses double precision NOT NULL,
        average_accuracy double precision NOT NULL,
        games_played integer NOT NULL,
        games_won integer NOT NULL,
        games_lost integer NOT NULL,
        won boolean NOT NULL,
        teammate_ids integer[] NOT NULL,
        opponent_ids integer[] NOT NULL,
        player_id integer NOT NULL,
        match_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_player_match_stats" PRIMARY KEY (id),
        CONSTRAINT "FK_player_match_stats_matches_match_id" FOREIGN KEY (match_id) REFERENCES matches (id) ON DELETE CASCADE,
        CONSTRAINT "FK_player_match_stats_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE rating_adjustments (
        id integer GENERATED ALWAYS AS IDENTITY,
        adjustment_type integer NOT NULL,
        timestamp timestamp with time zone NOT NULL,
        rating_before double precision NOT NULL,
        rating_after double precision NOT NULL,
        volatility_before double precision NOT NULL,
        volatility_after double precision NOT NULL,
        player_rating_id integer NOT NULL,
        player_id integer NOT NULL,
        match_id integer,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_rating_adjustments" PRIMARY KEY (id),
        CONSTRAINT "FK_rating_adjustments_matches_match_id" FOREIGN KEY (match_id) REFERENCES matches (id) ON DELETE CASCADE,
        CONSTRAINT "FK_rating_adjustments_player_ratings_player_rating_id" FOREIGN KEY (player_rating_id) REFERENCES player_ratings (id) ON DELETE CASCADE,
        CONSTRAINT "FK_rating_adjustments_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE game_audits (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        ref_id_lock integer NOT NULL,
        ref_id integer,
        action_user_id integer,
        action_type integer NOT NULL,
        changes jsonb NOT NULL,
        CONSTRAINT "PK_game_audits" PRIMARY KEY (id),
        CONSTRAINT "FK_game_audits_games_ref_id" FOREIGN KEY (ref_id) REFERENCES games (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE game_scores (
        id integer GENERATED ALWAYS AS IDENTITY,
        score integer NOT NULL,
        placement integer NOT NULL,
        max_combo integer NOT NULL,
        count_50 integer NOT NULL,
        count_100 integer NOT NULL,
        count_300 integer NOT NULL,
        count_miss integer NOT NULL,
        count_katu integer NOT NULL,
        count_geki integer NOT NULL,
        pass boolean NOT NULL,
        perfect boolean NOT NULL,
        grade integer NOT NULL,
        mods integer NOT NULL,
        team integer NOT NULL,
        ruleset integer NOT NULL,
        verification_status integer NOT NULL,
        rejection_reason integer NOT NULL,
        processing_status integer NOT NULL,
        last_processing_date timestamp with time zone NOT NULL DEFAULT ('2007-09-17T00:00:00'::timestamp),
        game_id integer NOT NULL,
        player_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        CONSTRAINT "PK_game_scores" PRIMARY KEY (id),
        CONSTRAINT "FK_game_scores_games_game_id" FOREIGN KEY (game_id) REFERENCES games (id) ON DELETE CASCADE,
        CONSTRAINT "FK_game_scores_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE game_win_records (
        id integer GENERATED ALWAYS AS IDENTITY,
        winner_roster integer[] NOT NULL,
        loser_roster integer[] NOT NULL,
        winner_team integer NOT NULL,
        loser_team integer NOT NULL,
        winner_score integer NOT NULL,
        loser_score integer NOT NULL,
        game_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_game_win_records" PRIMARY KEY (id),
        CONSTRAINT "FK_game_win_records_games_game_id" FOREIGN KEY (game_id) REFERENCES games (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE TABLE game_score_audits (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        ref_id_lock integer NOT NULL,
        ref_id integer,
        action_user_id integer,
        action_type integer NOT NULL,
        changes jsonb NOT NULL,
        CONSTRAINT "PK_game_score_audits" PRIMARY KEY (id),
        CONSTRAINT "FK_game_score_audits_game_scores_ref_id" FOREIGN KEY (ref_id) REFERENCES game_scores (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_beatmaps_osu_id" ON beatmaps (osu_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_game_audits_ref_id" ON game_audits (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_game_score_audits_ref_id" ON game_score_audits (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_game_scores_game_id" ON game_scores (game_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_game_scores_player_id" ON game_scores (player_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_game_scores_player_id_game_id" ON game_scores (player_id, game_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_game_win_records_game_id" ON game_win_records (game_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_game_win_records_winner_roster" ON game_win_records (winner_roster);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_games_beatmap_id" ON games (beatmap_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_games_match_id" ON games (match_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_games_osu_id" ON games (osu_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_games_start_time" ON games (start_time);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_match_audits_ref_id" ON match_audits (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_match_win_records_loser_roster" ON match_win_records (loser_roster);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_match_win_records_match_id" ON match_win_records (match_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_match_win_records_winner_roster" ON match_win_records (winner_roster);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_matches_osu_id" ON matches (osu_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_matches_submitted_by_user_id" ON matches (submitted_by_user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_matches_tournament_id" ON matches (tournament_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_matches_verified_by_user_id" ON matches (verified_by_user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_oauth_clients_user_id" ON oauth_clients (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_player_match_stats_match_id" ON player_match_stats (match_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_player_match_stats_player_id" ON player_match_stats (player_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_player_match_stats_player_id_match_id" ON player_match_stats (player_id, match_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_player_match_stats_player_id_won" ON player_match_stats (player_id, won);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_player_ratings_player_id" ON player_ratings (player_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_player_ratings_player_id_ruleset" ON player_ratings (player_id, ruleset);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_player_ratings_rating" ON player_ratings (rating DESC);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_player_ratings_ruleset" ON player_ratings (ruleset);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_player_tournament_stats_player_id_tournament_id" ON player_tournament_stats (player_id, tournament_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_player_tournament_stats_tournament_id" ON player_tournament_stats (tournament_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_players_osu_id" ON players (osu_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_rating_adjustments_match_id" ON rating_adjustments (match_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_rating_adjustments_player_id_match_id" ON rating_adjustments (player_id, match_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_rating_adjustments_player_id_timestamp" ON rating_adjustments (player_id, timestamp);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_rating_adjustments_player_rating_id" ON rating_adjustments (player_rating_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_tournament_audits_ref_id" ON tournament_audits (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_tournaments_name_abbreviation" ON tournaments (name, abbreviation);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_tournaments_ruleset" ON tournaments (ruleset);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_tournaments_submitted_by_user_id" ON tournaments (submitted_by_user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE INDEX "IX_tournaments_verified_by_user_id" ON tournaments (verified_by_user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_user_settings_user_id" ON user_settings (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    CREATE UNIQUE INDEX "IX_users_player_id" ON users (player_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909220446_Initial') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240909220446_Initial', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE users ALTER COLUMN scopes SET DEFAULT ARRAY[]::text[];
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE user_settings ALTER COLUMN default_ruleset_controlled SET DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE tournaments ALTER COLUMN verification_status SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE tournaments ALTER COLUMN rejection_reason SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE tournaments ALTER COLUMN processing_status SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE players ALTER COLUMN username SET DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE players ALTER COLUMN default_ruleset SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE players ALTER COLUMN country SET DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE matches ALTER COLUMN verification_status SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE matches ALTER COLUMN rejection_reason SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    ALTER TABLE matches ALTER COLUMN processing_status SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240909230701_AdditionalDefaultValues') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240909230701_AdditionalDefaultValues', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910031643_TournamentDefaultStartEndTimes') THEN
    ALTER TABLE tournaments ALTER COLUMN "StartTime" SET DEFAULT ('2007-09-17T00:00:00'::timestamp);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910031643_TournamentDefaultStartEndTimes') THEN
    ALTER TABLE tournaments ALTER COLUMN "EndTime" SET DEFAULT ('2007-09-17T00:00:00'::timestamp);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910031643_TournamentDefaultStartEndTimes') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240910031643_TournamentDefaultStartEndTimes', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910032352_TournamentStartTimeEndTime_ColumnDefinition') THEN
    ALTER TABLE tournaments RENAME COLUMN "StartTime" TO start_time;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910032352_TournamentStartTimeEndTime_ColumnDefinition') THEN
    ALTER TABLE tournaments RENAME COLUMN "EndTime" TO end_time;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910032352_TournamentStartTimeEndTime_ColumnDefinition') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240910032352_TournamentStartTimeEndTime_ColumnDefinition', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910033903_Match_Name_EmptyStringByDefault') THEN
    ALTER TABLE matches ALTER COLUMN name SET DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240910033903_Match_Name_EmptyStringByDefault') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240910033903_Match_Name_EmptyStringByDefault', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240911003913_Move_OsuRulesetData_ToOwnTable') THEN
    ALTER TABLE players DROP COLUMN ruleset_data;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240911003913_Move_OsuRulesetData_ToOwnTable') THEN
    CREATE TABLE player_osu_ruleset_data (
        id integer GENERATED ALWAYS AS IDENTITY,
        ruleset integer NOT NULL,
        pp double precision NOT NULL,
        global_rank integer NOT NULL,
        earliest_global_rank integer,
        earliest_global_rank_date timestamp with time zone,
        player_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        CONSTRAINT "PK_player_osu_ruleset_data" PRIMARY KEY (id),
        CONSTRAINT "FK_player_osu_ruleset_data_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240911003913_Move_OsuRulesetData_ToOwnTable') THEN
    CREATE UNIQUE INDEX "IX_player_osu_ruleset_data_player_id_ruleset" ON player_osu_ruleset_data (player_id, ruleset);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240911003913_Move_OsuRulesetData_ToOwnTable') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240911003913_Move_OsuRulesetData_ToOwnTable', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240917023732_Match_AdminNotes') THEN
    CREATE TABLE match_admin_notes (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        created timestamp with time zone NOT NULL,
        updated timestamp with time zone,
        note text NOT NULL,
        ref_id integer NOT NULL,
        admin_user_id integer NOT NULL,
        CONSTRAINT "PK_match_admin_notes" PRIMARY KEY (id),
        CONSTRAINT "FK_match_admin_notes_matches_ref_id" FOREIGN KEY (ref_id) REFERENCES matches (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240917023732_Match_AdminNotes') THEN
    CREATE INDEX "IX_match_admin_notes_ref_id" ON match_admin_notes (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240917023732_Match_AdminNotes') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240917023732_Match_AdminNotes', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918231526_PlayerHighestRanks') THEN
    CREATE TABLE player_highest_ranks (
        id integer GENERATED ALWAYS AS IDENTITY,
        ruleset integer NOT NULL,
        global_rank integer NOT NULL,
        global_rank_date timestamp with time zone NOT NULL,
        country_rank integer NOT NULL,
        country_rank_date timestamp with time zone NOT NULL,
        player_id integer NOT NULL,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        CONSTRAINT "PK_player_highest_ranks" PRIMARY KEY (id),
        CONSTRAINT "FK_player_highest_ranks_players_player_id" FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918231526_PlayerHighestRanks') THEN
    CREATE INDEX "IX_player_highest_ranks_country_rank" ON player_highest_ranks (country_rank DESC);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918231526_PlayerHighestRanks') THEN
    CREATE INDEX "IX_player_highest_ranks_global_rank" ON player_highest_ranks (global_rank DESC);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918231526_PlayerHighestRanks') THEN
    CREATE UNIQUE INDEX "IX_player_highest_ranks_player_id_ruleset" ON player_highest_ranks (player_id, ruleset);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918231526_PlayerHighestRanks') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240918231526_PlayerHighestRanks', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918232237_Tournament_CreateAdminNotes') THEN
    CREATE TABLE tournament_admin_notes (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        note text NOT NULL,
        ref_id integer NOT NULL,
        admin_user_id integer NOT NULL,
        CONSTRAINT "PK_tournament_admin_notes" PRIMARY KEY (id),
        CONSTRAINT "FK_tournament_admin_notes_tournaments_ref_id" FOREIGN KEY (ref_id) REFERENCES tournaments (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918232237_Tournament_CreateAdminNotes') THEN
    CREATE INDEX "IX_tournament_admin_notes_ref_id" ON tournament_admin_notes (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240918232237_Tournament_CreateAdminNotes') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240918232237_Tournament_CreateAdminNotes', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923012404_OAuthClientAdminNotes') THEN
    CREATE TABLE oauth_client_admin_notes (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        note text NOT NULL,
        ref_id integer NOT NULL,
        admin_user_id integer NOT NULL,
        CONSTRAINT "PK_oauth_client_admin_notes" PRIMARY KEY (id),
        CONSTRAINT "FK_oauth_client_admin_notes_oauth_clients_ref_id" FOREIGN KEY (ref_id) REFERENCES oauth_clients (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923012404_OAuthClientAdminNotes') THEN
    CREATE INDEX "IX_oauth_client_admin_notes_ref_id" ON oauth_client_admin_notes (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923012404_OAuthClientAdminNotes') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240923012404_OAuthClientAdminNotes', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923012912_GameAdminNotes') THEN
    CREATE TABLE game_admin_notes (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        note text NOT NULL,
        ref_id integer NOT NULL,
        admin_user_id integer NOT NULL,
        CONSTRAINT "PK_game_admin_notes" PRIMARY KEY (id),
        CONSTRAINT "FK_game_admin_notes_games_ref_id" FOREIGN KEY (ref_id) REFERENCES games (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923012912_GameAdminNotes') THEN
    CREATE INDEX "IX_game_admin_notes_ref_id" ON game_admin_notes (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923012912_GameAdminNotes') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240923012912_GameAdminNotes', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923013305_PlayerAdminNotes') THEN
    CREATE TABLE player_admin_notes (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        note text NOT NULL,
        ref_id integer NOT NULL,
        admin_user_id integer NOT NULL,
        CONSTRAINT "PK_player_admin_notes" PRIMARY KEY (id),
        CONSTRAINT "FK_player_admin_notes_players_ref_id" FOREIGN KEY (ref_id) REFERENCES players (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923013305_PlayerAdminNotes') THEN
    CREATE INDEX "IX_player_admin_notes_ref_id" ON player_admin_notes (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923013305_PlayerAdminNotes') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240923013305_PlayerAdminNotes', '8.0.5');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923013609_GameScoreAdminNote') THEN
    CREATE TABLE game_score_admin_notes (
        id integer GENERATED ALWAYS AS IDENTITY,
        created timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        updated timestamp with time zone,
        note text NOT NULL,
        ref_id integer NOT NULL,
        admin_user_id integer NOT NULL,
        CONSTRAINT "PK_game_score_admin_notes" PRIMARY KEY (id),
        CONSTRAINT "FK_game_score_admin_notes_game_scores_ref_id" FOREIGN KEY (ref_id) REFERENCES game_scores (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923013609_GameScoreAdminNote') THEN
    CREATE INDEX "IX_game_score_admin_notes_ref_id" ON game_score_admin_notes (ref_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240923013609_GameScoreAdminNote') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240923013609_GameScoreAdminNote', '8.0.5');
    END IF;
END $EF$;
COMMIT;

